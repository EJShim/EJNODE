{"version":3,"file":"permute.js","sourceRoot":"","sources":["permute.ts"],"names":[],"mappings":";;;;;;AAAA,IAAO,EAAE,WAAW,cAAc,CAAC,CAAC;AACpC,IAAO,SAAS,WAAW,cAAc,CAAC,CAAC;AAE3C;IAAsB,2BAAS;IAC7B,iBAAmB,KAAe,EAAS,KAAe;QACxD,iBAAO,CAAC;QADS,UAAK,GAAL,KAAK,CAAU;QAAS,UAAK,GAAL,KAAK,CAAU;QAExD,IAAI,CAAC,IAAI,GAAG,YAAY,GAAG,KAAK,GAAG,MAAM,GAAG,KAAK,GAAG,IAAI,CAAC;IAC3D,CAAC;IAED,uBAAK,GAAL;QACE,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,OAAR,EAAE,EAAU,IAAI,CAAC,KAAK,SAAE,UAAU,GAAC,CAAC;QAC5C,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC;IAED,qBAAG,GAAH,UAAI,CAAY;QACd,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IACH,cAAC;AAAD,CAAC,AAdD,CAAsB,SAAS,GAc9B;AAED,iBAAS,OAAO,CAAC","sourcesContent":["import $M = require('../src/sushi');\nimport BenchBase = require('./bench_base');\n\nclass permute extends BenchBase {\n  constructor(public shape: number[], public order: number[]) {\n    super();\n    this.name = \"permute ([\" + shape + \"], [\" + order + \"])\";\n  }\n\n  setup() {\n    var a = $M.zeros(...this.shape, 'gpuArray');\n    return [a];\n  }\n\n  run(a: $M.Matrix): void {\n    $M.permute(a, this.order);\n  }\n}\n\nexport = permute;\n"]}