{"version":3,"file":"mtimes_trans.js","sourceRoot":"","sources":["mtimes_trans.ts"],"names":[],"mappings":"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","sourcesContent":["import $M = require('../src/sushi');\nimport BenchBase = require('./bench_base');\n\nclass mtimes_trans extends BenchBase {\n  constructor(public m: number, public n: number, public k: number, public trans_a: boolean, public trans_b: boolean) {\n    super();\n    this.name = \"mtimes_trans \" + m + \"*\" + n + \"*\" + k + \" \" + (trans_a ? \"A^T\" : \"\") + (trans_b ? \"B^T\" : \"\");\n  }\n\n  setup() {\n    var a_r, a_c, b_r, b_c;\n    if (this.trans_a) {\n      a_r = this.k;\n      a_c = this.m;\n    } else {\n      a_r = this.m;\n      a_c = this.k;\n    }\n    if (this.trans_b) {\n      b_r = this.n;\n      b_c = this.k;\n    } else {\n      b_r = this.k;\n      b_c = this.n;\n    }\n    var a = $M.gpuArray($M.rand(a_r, a_c));\n    var b = $M.gpuArray($M.rand(b_r, b_c));\n    return [a, b];\n  }\n\n  run(a: $M.Matrix, b: $M.Matrix): void {\n    mtimes_trans_cl(a, b, this.trans_a, this.trans_b);\n  }\n}\n\nexport = mtimes_trans;\n\n\nfunction mtimes_trans_local(A: $M.Matrix, B: $M.Matrix, trans_a: boolean, trans_b: boolean) {\n  var devicetype = $M.devicetype(A);\n  if (devicetype !== $M.devicetype(B)) {\n    throw new Error('devicetype mismatch');\n  }\n  if (devicetype == 'cl') {\n    return mtimes_trans_cl(A, B, trans_a, trans_b);\n  } else {\n    if (trans_a) {\n      A = $M.t(A);\n    }\n    if (trans_b) {\n      B = $M.t(B);\n    }\n    var C = $M.mtimes(A, B);\n    if (trans_a) {\n      A.destruct();\n    }\n    if (trans_b) {\n      B.destruct();\n    }\n    return C;\n  }\n}\n\nfunction mtimes_trans_cl(A: $M.Matrix, B: $M.Matrix, trans_a: boolean, trans_b: boolean) {\n  if (A._ndims != 2 || B._ndims != 2) {\n    throw new Error('Matrix must be two-dimensional');\n  }\n  if (A._klass != 'single' || B._klass != 'single') {\n    throw new Error('Matrix klass must be single');\n  }\n  var m: number, n: number, k: number;\n  var lda: number, ldb: number, ldc: number;\n  var trans_a_char = 'N', trans_b_char = 'N';\n  if (trans_a) {\n    m = A._size[1];\n    k = A._size[0];\n    trans_a_char = 'T';\n  } else {\n    m = A._size[0];\n    k = A._size[1];\n  }\n  var size_mismatch = false;\n  if (trans_b) {\n    n = B._size[0];\n    if (k != B._size[1]) {\n      size_mismatch = true;\n    }\n    trans_b_char = 'T';\n  } else {\n    n = B._size[1];\n    if (k != B._size[0]) {\n      size_mismatch = true;\n    }\n  }\n\n  var C = new $M.CL.MatrixCL([m, n], 'single');\n  lda = A._strides[1];\n  ldb = B._strides[1];\n  ldc = C._strides[1];\n  $M.CL.sgemm(trans_a_char, trans_b_char, m, n, k, 1.0, A, lda, B, ldb, 0.0, C, ldc);\n  return C;\n}\n"]}