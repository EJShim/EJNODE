{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import $M = require('../src/sushi');\n\ndeclare var require;\ndeclare var process;\ndeclare var Buffer;\nvar os = require('os');\nvar fs = require('fs');\nvar child_process = require('child_process');\nvar cl_enabled = Boolean(Number(process.env['TEST_CL']));\nconsole.log('OpenCL ' + cl_enabled);\nvar MatrixCL = null;\nif (cl_enabled) {\n  $M.initcl();\n  MatrixCL = require('../src/cl/matrix_cl');\n}\n\nimport BenchBase = require('./bench_base');\nimport mtimes = require('./mtimes');\nimport slice = require('./slice');\nimport transpose = require('./transpose');\nimport permute = require('./permute');\nimport mtimes_trans = require('./mtimes_trans');\nimport destruct = require('./destruct');\nimport mtimes_largek = require('./mtimes_largek');\n\nfunction time(f: BenchBase, n_run: number = 3): number {\n  var elapsed = 0;\n  $M.autodestruct(() => {\n    var args = f.setup();\n    if (!args) {\n      args = [];\n    }\n    f.run(...args);//pre-run to compile kernel\n    if (cl_enabled) {\n      $M.CL.finish();\n    }\n    var runtimes = [];\n    for (var i = 0; i < n_run; i++) {\n      var begin = Date.now();\n      f.run(...args);\n      if (cl_enabled) {\n        $M.CL.finish();\n      }\n      var end = Date.now();\n      var current_elapsed = end - begin;\n      runtimes.push(current_elapsed);\n    }\n\n    //get min-running time\n    elapsed = Math.min.apply(null, runtimes);\n    console.log('' + f.name + ': ' + elapsed + 'ms');\n    return;\n  });\n  return elapsed;\n}\n\nfunction main() {\n  time(new mtimes(2000, 2000, 2000));\n  time(new mtimes_trans(27, 64, 1605632, true, false));\n  time(new mtimes_largek(27, 64, 1605632));\n  time(new mtimes(55*55*1, 96, 11*11*3));\n  time(new slice('get', [10000, 100, 20], [$M.colon(), $M.colon(1, $M.end-1), $M.jsa2mat([1,3,5], false, 'int32')]));\n  time(new transpose(9216, 4096));\n  time(new permute([55, 55, 96, 128], [1, 2, 4, 3]));\n  time(new permute([55, 55, 96, 128], [4, 1, 2, 3]));\n  time(new destruct(1024*1024*10));\n  mtimes_trans_alexnet();\n}\n\nfunction mtimes_trans_alexnet() {\n  var combination = function (name, m, n, k) {\n    console.log(name);\n    time(new mtimes_trans(m, n, k, false, false));//fwd\n    time(new mtimes_trans(m, k, n, false, true));//back\n    time(new mtimes_trans(k, n, m, true, false));//update\n  }\n\n  combination('conv1', 387200, 96, 363);\n  combination('conv2', 93312, 256, 1200);//group\n  combination('conv3', 93312, 384, 2304);\n  combination('conv4', 21632, 384, 1728);//group\n  combination('conv5', 21632, 256, 1728);//group\n}\n\nmain();\n"]}