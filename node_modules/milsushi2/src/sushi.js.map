{"version":3,"file":"sushi.js","sourceRoot":"","sources":["sushi.ts"],"names":[],"mappings":"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","sourcesContent":["// (c) 2016 Machine Intelligence Laboratory (The University of Tokyo), MIT License.\nexport import Matrix = require('./matrix');\nexport import Colon = require('./colon');\nexport import colon = require('./colonwrap');\nimport util = require('./util');\nimport func_generator = require('./func_generator');\nimport shape_converter = require('./shape_converter');\nimport reduction = require('./reduction');\nimport mul = require('./mul');\nimport npy = require('./io/npy');\n//export import MatrixCL = require('./cl/matrix_cl');\nexport var CL: any = null;// for webcl\n\nexport var end = -1;\nexport type MatrixOrNumber = util.MatrixOrNumber;\nexport type MatrixLike = Matrix | number | number[] | number[][];\n\ndeclare var require;\nvar initcl_result: boolean = null;\nexport function initcl(): boolean {\n  if (initcl_result != null) {\n    return initcl_result;\n  }\n  try {\n    var dummy: any = require('../src/cl/handwrittenjs/sushi_cl');\n    initcl_result = true;\n  } catch (ex) {\n    console.error(ex);\n    initcl_result = false;\n  }\n  return initcl_result;\n}\n\nexport function devicetype(A: Matrix): string {\n  if (A instanceof Matrix) {\n    return 'cpu';\n  }\n  return null;\n}\n\nexport function autodestruct(f: () => any): any {\n  Matrix.autodestruct_push();\n  var mats_to_save = [];\n  try {\n    mats_to_save = f();\n  } finally {\n    if (typeof (mats_to_save) === 'object') {\n      var mats_list;\n      if (mats_to_save instanceof Matrix) {\n        // single matrix return\n        mats_list = [mats_to_save];\n      } else if (mats_to_save.length !== undefined) {\n        //array-like\n        mats_list = mats_to_save.filter((v) => (v instanceof Matrix));\n      } else {\n        //dictionary\n        mats_list = [];\n        for (var k in mats_to_save) {\n          if (mats_to_save[k] instanceof Matrix) {\n            mats_list.push(mats_to_save[k]);\n          }\n        }\n      }\n\n      var stack_top = Matrix._autodestruct_stack_top;\n      var stack_second_top = Matrix._autodestruct_stack[Matrix._autodestruct_stack.length - 2];\n      for (var i = 0; i < mats_list.length; i++) {\n        var mat = mats_list[i];\n        var delete_idx = stack_top.indexOf(mat);\n        if (delete_idx >= 0) {\n          stack_top.splice(delete_idx, 1);\n          if (stack_second_top) {\n            stack_second_top.push(mat);//maybe destructed in nested autodestruct\n          }\n        }\n      }\n    }\n    Matrix.autodestruct_pop();\n  }\n  return mats_to_save;\n}\n\nexport var typedarray2mat = Matrix.typedarray2mat;\n\nexport function zeros(...args: any[]): Matrix {\n  var format = util.calc_zeros_size(args);\n  return new Matrix(format.size, format.klass);\n}\n\nexport function ones(...args: any[]): Matrix {\n  var mat = zeros(...args);\n  mat._data.fill(1);\n  return mat;\n}\n\nexport function rand(...args: any[]): Matrix {\n  var mat = zeros(...args);\n  var data = mat._data;\n  for (var i = 0, length = data.length; i < length; i++) {\n    data[i] = Math.random();\n  }\n  return mat;\n}\n\nexport function randi(imax: number | number[], ...args: any[]): Matrix {\n  //first argument: imax or [imin, imax]\n  var _imin = 1, _imax = 1;\n  if ((<any>imax).length != null) {\n    if ((<any>imax).length === 2) {\n      _imin = imax[0];\n      _imax = imax[1];\n    } else {\n      throw new Error('Invalid imax');\n    }\n  } else {\n    _imax = <number>imax;\n  }\n\n  var mat = zeros(...args);\n  var data = mat._data;\n  for (var i = 0, length = data.length; i < length; i++) {\n    data[i] = Math.floor(Math.random() * (_imax - _imin + 1)) + _imin;\n  }\n  return mat;\n}\n\nexport function randn(...args: any[]): Matrix {\n  var mat = zeros(...args);\n  var data = mat._data;\n  for (var i = 0, length = data.length; i < length; i++) {\n    var alpha = Math.random();\n    var beta = Math.random();\n    data[i] = Math.sqrt(-2 * Math.log(alpha)) * Math.sin(2 * Math.PI * beta);\n  }\n  return mat;\n}\n\nexport function eye(...args: any[]): Matrix {\n  var mat = zeros(...args);\n  var min_dim = Math.min(mat._size[0], mat._size[1]);\n  for (var i = 1; i <= min_dim; i++) {\n    mat.set(i, i, 1);\n  }\n  return mat;\n}\n\nexport function size(X: Matrix): Matrix;\nexport function size(X: Matrix, dim: number): number;\nexport function size(X: Matrix, dim?: number): any {\n  if (dim === void 0) {\n    // return as row vector\n    return jsa2mat([X._size], false, 'int32');//int32 to represent value > 8M accurately\n  } else {\n    if (dim <= 0 || !Matrix._isinteger(dim)) {\n      throw new Error('Invalid dimension');\n    }\n\n    return X._size[dim - 1] || 1;\n  }\n}\n\nexport function sizejsa(X: Matrix): number[] {\n  return X._size;\n}\n\nexport function jsa2mat(A: any[], one_d_column?: boolean, klass?: string): Matrix {\n  return Matrix.jsa2mat(A, one_d_column, klass);\n}\n\nexport function mat2jsa(A: Matrix, one_d_flatten: boolean = false): any[] {\n  return A.mat2jsa(one_d_flatten);\n}\n\nexport function length(X: Matrix): number {\n  return Math.max.apply(null, X._size);\n}\n\nexport function ndims(X: Matrix): number {\n  return X._ndims;\n}\n\nexport function numel(X: Matrix): number {\n  return X._numel;\n}\n\nexport function iscolumn(A: Matrix): boolean {\n  return A._ndims == 2 && A._size[1] == 1;\n}\nexport function isrow(A: Matrix): boolean {\n  return A._ndims == 2 && A._size[0] == 1;\n}\nexport function isvector(A: Matrix): boolean {\n  return A._ndims == 2 && (A._size[0] == 1 || A._size[1] == 1);\n}\nexport function isempty(A: Matrix): boolean {\n  return A._numel == 0;\n}\nexport function ismatrix(A: Matrix): boolean {\n  return A._ndims == 2;\n}\nexport function isscalar(A: Matrix): boolean {\n  // currently, number is not supported\n  return A._numel == 1;\n}\n\nexport function klass(object: Matrix): string {\n  return object._klass;\n}\n\nexport function gpuArray(A: MatrixLike): Matrix {\n  //overriden by sushi_cl\n  return util.as_mat(A).copy();\n}\n\nexport function gather(A: Matrix): Matrix {\n  //overriden by sushi_cl\n  return A.copy();\n}\n\nfunction jsaequal(a: any[], b: any[]): boolean {\n  if (a.length != b.length) {\n    return false;\n  }\n\n  for (var i = 0; i < a.length; i++) {\n    if (a[i] != b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// If input is 1x1 matrix, returns number\nfunction _singlemat2number(A: MatrixOrNumber): MatrixOrNumber {\n  if ((A instanceof Matrix) && isscalar(A)) {\n    return A.get_scalar([1]);\n  }\n\n  return A;\n}\n\n\n//equality http://jp.mathworks.com/help/matlab/relational-operators.html\n/**\n * Compares elements of two matrices. One of the input can be scalar number.\n *\n * @param A Input matrix.\n * @param B Input matrix.\n * @return logical matrix. 1 if A(i) == B(i).\n */\nexport var eq = function (A: MatrixOrNumber, B: MatrixOrNumber): Matrix {\n  throw new Error();\n};\neq = func_generator.make_compare_func_all('Number(%a == %b)');\n/**\n * Compares elements of two matrices. One of the input can be scalar number.\n *\n * @param A Input matrix.\n * @param B Input matrix.\n * @return logical matrix. 1 if A(i) >= B(i).\n */\nexport var ge = function (A: MatrixOrNumber, B: MatrixOrNumber): Matrix {\n  throw new Error();\n};\nge = func_generator.make_compare_func_all('Number(%a >= %b)');\n/**\n * Compares elements of two matrices. One of the input can be scalar number.\n *\n * @param A Input matrix.\n * @param B Input matrix.\n * @return logical matrix. 1 if A(i) > B(i).\n */\nexport var gt = function (A: MatrixOrNumber, B: MatrixOrNumber): Matrix {\n  throw new Error();\n};\ngt = func_generator.make_compare_func_all('Number(%a > %b)');\n/**\n * Compares elements of two matrices. One of the input can be scalar number.\n *\n * @param A Input matrix.\n * @param B Input matrix.\n * @return logical matrix. 1 if A(i) <= B(i).\n */\nexport var le = function (A: MatrixOrNumber, B: MatrixOrNumber): Matrix {\n  throw new Error();\n};\nle = func_generator.make_compare_func_all('Number(%a <= %b)');\n/**\n * Compares elements of two matrices. One of the input can be scalar number.\n *\n * @param A Input matrix.\n * @param B Input matrix.\n * @return logical matrix. 1 if A(i) < B(i).\n */\nexport var lt = function (A: MatrixOrNumber, B: MatrixOrNumber): Matrix {\n  throw new Error();\n};\nlt = func_generator.make_compare_func_all('Number(%a < %b)');\n/**\n * Compares elements of two matrices. One of the input can be scalar number.\n *\n * @param A Input matrix.\n * @param B Input matrix.\n * @return logical matrix. 1 if A(i) != B(i).\n */\nexport var ne = function (A: MatrixOrNumber, B: MatrixOrNumber): Matrix {\n  throw new Error();\n};\nne = func_generator.make_compare_func_all('Number(%a != %b)');\n/**\n * Checks if all matrices are equal. Assumes NaN is not equal to NaN.\n *\n * @param As Input matrices.\n * @return true if all matrices are the same regarding both size and value of elements.\n */\nexport var isequal = function (...As: Matrix[]): boolean {\n  throw new Error();\n};\nisequal = func_generator.isequal;\n/**\n * Checks if all matrices are equal. Assumes NaN is equal to NaN.\n *\n * @param As Input matrices.\n * @return true if all matrices are the same regarding both size and value of elements.\n */\nexport var isequaln = function (...As: Matrix[]): boolean {\n  throw new Error();\n};\nisequaln = func_generator.isequaln;\n/**\n * Compares if elements of two matrices are close. One of the input can be scalar number.\n *\n * @param A Input matrix.\n * @param B Input matrix.\n * @return logical matrix. 1 if abs(A(i) - B(i)) <= atol + rtol * abs(B(i)).\n */\nexport var isclose = function (A: MatrixOrNumber, B: MatrixOrNumber, rtol: number = 1e-5, atol: number = 1e-8, equal_nan: boolean = false): Matrix {\n  throw new Error();\n};\nisclose = func_generator.isclose;\n/**\n * Compares if all the elements of two matrices are close. One of the input can be scalar number. See also [[isclose]]\n *\n * @param A Input matrix.\n * @param B Input matrix.\n * @return true if all elements of isclose(A, B) are 1.\n */\nexport var allclose = function (A: MatrixOrNumber, B: MatrixOrNumber, rtol?: number, atol?: number, equal_nan?: boolean): boolean {\n  throw new Error();\n};\nallclose = func_generator.allclose;\n\nexport var plus = func_generator.make_binary_arith_func_all('%a + %b');\nexport var minus = func_generator.make_binary_arith_func_all('%a - %b');\nexport var times = func_generator.make_binary_arith_func_all('%a * %b');\nexport var rdivide = func_generator.make_binary_arith_func_all('%a / %b');\nexport var ldivide = func_generator.make_binary_arith_func_all('%b / %a');\nexport var power = func_generator.make_binary_arith_func_all('Math.pow(%a,%b)');\nexport var floor = func_generator.make_unary_arith_func_all('Math.floor(%a)');\nexport var fix = func_generator.make_unary_arith_func_all('(%a > 0 ? Math.floor(%a) : Math.ceil(%a))');\nexport var ceil = func_generator.make_unary_arith_func_all('Math.ceil(%a)');\nexport var uplus = func_generator.make_unary_arith_func_all('+%a');\nexport var uminus = func_generator.make_unary_arith_func_all('-%a');\nexport var exp = func_generator.make_unary_arith_func_all('Math.exp(%a)');\nexport var log = func_generator.make_unary_arith_func_all('Math.log(%a)');\n\nexport var max = reduction.max;\nexport var min = reduction.min;\nexport var argmax = reduction.argmax;\nexport var argmin = reduction.argmin;\nexport var sum = reduction.sum;\nexport var mean = reduction.mean;\nexport var prod = reduction.prod;\nexport var std = reduction.std;\nexport var variance = reduction.variance;\n\nexport var mtimes = mul.mtimes;\n\nexport function reshape(A: Matrix, ...sz: any[]): Matrix {\n  var dst = A.copy();\n  try {\n    dst.reshape_inplace(...sz);\n    return dst;\n  } catch (error) {\n    dst.destruct();\n    throw error;\n  }\n}\n\nexport function squeeze(A: Matrix): Matrix {\n  var dst = A.copy();\n  dst.squeeze_inplace();\n  return dst;\n}\n\nexport var transpose = shape_converter.transpose;\nexport var t = transpose;//alias\n\nexport var repmat = shape_converter.repmat;\nexport var cat = shape_converter.cat;\nexport var horzcat = shape_converter.horzcat;\nexport var vertcat = shape_converter.vertcat;\nexport var permute = shape_converter.permute;\nexport var ipermute = shape_converter.ipermute;\n\nexport var npyread = npy.npyread;\nexport var npysave = npy.npysave;\n\n//indexing\n//TODO:test\nexport function sub2ind(matrixSize: Matrix | number[], ...dimSub: number[]): number {\n  //note: 'end' cannot be used in matlab sub2ind; only positive index is valid\n  var msizejsa: number[];\n  if (matrixSize instanceof Matrix) {\n    if (!isrow(matrixSize) || matrixSize._numel < 2) {\n      throw new Error('matrixSize must be row vector');\n    }\n    msizejsa = matrixSize.mat2jsa(true);\n  } else {\n    msizejsa = <number[]>matrixSize;\n  }\n\n  var stride = 1;\n  var idx = 1;\n  for (var i = 0; i < msizejsa.length; i++) {\n    idx += ((dimSub[i] || 1) - 1) * stride;\n    stride *= msizejsa[i];\n  }\n\n  return idx;\n}\n\nexport function colonvec(start: number, stop_step: number, stop?: number, klass = 'single'): Matrix {\n  // make row vector by i:j:k\n  var step;\n  if (stop == null) {\n    stop = stop_step;\n    step = 1;\n  } else {\n    step = stop_step;\n  }\n\n  var n_item = Math.max(Math.floor((stop - start) / step) + 1, 0);\n  var vec = new Matrix([1, n_item], klass);\n  var vec_data = vec._data;\n  for (var i = 0; i < n_item; i++) {\n    vec_data[i] = start + step * i;\n  }\n  return vec;\n}\n"]}