{"version":3,"file":"util.js","sourceRoot":"","sources":["util.ts"],"names":[],"mappings":"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","sourcesContent":["// (c) 2016 Machine Intelligence Laboratory (The University of Tokyo), MIT License.\nimport Matrix = require('./matrix');\nexport type MatrixOrNumber = Matrix | number;\n\n\n/**\n * Convert array-like to Matrix, number to 1x1 Matrix\n */\nexport function as_mat(A: Matrix | any): Matrix {\n  if (A instanceof Matrix) {\n    return A;\n  } else {\n    //array to matrix\n    //number to 1x1 matrix\n    return Matrix.jsa2mat(<any>A);\n  }\n}\n\n/**\n * Convert array-like to Matrix, preserving other type\n */\nexport function as_mat_or_scalar(A: Matrix | any): Matrix | number {\n  if (A instanceof Matrix) {\n    return A;\n  } else if (typeof(A) === 'object' && A.length != null) {\n    //array-like to Matrix\n    return Matrix.jsa2mat(<any>A);\n  } else {\n    return A;//preserve number\n  }\n}\n\n//finds common output class for matrices\nexport function commonklassstr(...klasses: string[]): string {\n  // single > int32 > uint8 > logical\n  var klass_order = ['single','int32','uint8','logical'];\n  if (klasses.length == 0) {\n    return klass_order[0];\n  }\n  var best_klass = 3;\n  for (var i = 0; i < klasses.length; i++) {\n    var element = klasses[i];\n    var score = klass_order.indexOf(element);\n    if (score < 0) {\n      throw new Error('Unknown klass');\n    }\n    best_klass = Math.min(score, best_klass);\n  }\n  \n  return klass_order[best_klass];\n}\n\nexport function commonklass(...mats: MatrixOrNumber[]): string {\n  //number not affects class decision\n  var klasses: string[] = [];\n  for (var i = 0; i < mats.length; i++) {\n    var element = mats[i];\n    if (element instanceof Matrix) {\n      klasses.push(element._klass);\n    }\n  }\n  \n  return commonklassstr(...klasses);\n}\n\nexport function issamesize(sizea: number[], sizeb: number[]): boolean {\n  for (var i = 0; i < sizea.length; i++) {\n    if (sizea[i] != sizeb[i]) {\n      return false;\n    }\n  }\n  \n  return true;\n}\n\nexport function force_cpu(A: MatrixOrNumber): MatrixOrNumber {\n  if (A instanceof Matrix) {\n    return A.to_cpu();\n  } else {\n    return A;\n  }\n}\n\nexport function force_cpu_scalar(A: MatrixOrNumber): MatrixOrNumber {\n  if (A instanceof Matrix) {\n    if (A._numel == 1) {\n      return A.get();\n    } else {\n      return A.to_cpu();\n    }\n  } else {\n    return A;\n  }\n}\n\nexport function jsaequal(a: any[], b: any[]): boolean {\n  if (a.length != b.length) {\n    return false;\n  }\n\n  for (var i = 0; i < a.length; i++) {\n    if (a[i] != b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function calc_zeros_size(args: any[]): {size: number[], klass:string} {\n  var size: number[];\n  var klass = 'single';\n  if (args.length >= 1 && typeof (args[args.length - 1]) === 'string') {\n    //zeros(_,typename)\n    klass = args[args.length - 1];\n    args.pop();\n  } else if (args.length >= 2 && args[args.length - 2] == 'like') {\n    //zeros('like', mat)\n    klass = args[args.length - 1]._klass;\n    args.pop();\n    args.pop();\n  }\n  if (args.length == 0) {\n    // return 1x1 matrix\n    size = [1,1];\n  } else {\n    if (args.length == 1) {\n      if (typeof (args[0]) === 'number') {\n        // nxn matrix\n        size = [args[0], args[0]];\n      } else if (args[0] instanceof Matrix) {\n        // size given as matrix\n        var sizemat: Matrix = args[0];\n        if (sizemat._size.length == 2 && sizemat._size[0] == 1 && sizemat._size[1] >= 1) {\n          size = Array.prototype.slice.call(sizemat._getdata());\n        } else {\n          throw new Error('matrix size is not valid row vector');\n        }\n      } else {\n        throw new Error('Unknown data type of argument 0');\n      }\n    } else {\n      size = args;\n    }\n  }\n  \n  return {size:size, klass:klass};\n}\n"]}