import Matrix = require('./matrix');
import util = require('./util');
export declare type MatrixOrNumber = util.MatrixOrNumber;
export declare function make_compare_func_all(operation: string): (A: MatrixOrNumber, B: MatrixOrNumber) => Matrix;
export declare function make_binary_arith_func(operation: string, a_mat: boolean, b_mat: boolean, dst_klass: string): (A: MatrixOrNumber, B: MatrixOrNumber) => Matrix;
export declare function make_binary_arith_func_all(operation: string): (A: MatrixOrNumber, B: MatrixOrNumber) => Matrix;
export declare function make_unary_arith_func(operation: string, a_mat: boolean, dst_klass: string): (A: MatrixOrNumber) => Matrix;
export declare function make_unary_arith_func_all(operation: string): (A: MatrixOrNumber) => Matrix;
export declare function isequal(...As: Matrix[]): boolean;
export declare function isequaln(...As: Matrix[]): boolean;
export declare function make_isclose_func(a_mat: boolean, b_mat: boolean): (A: MatrixOrNumber, B: MatrixOrNumber, rtol?: number, atol?: number, equal_nan?: boolean) => Matrix;
export declare var isclose: (A: number | Matrix, B: number | Matrix, rtol?: number, atol?: number, equal_nan?: boolean) => Matrix;
export declare function allclose(A: MatrixOrNumber, B: MatrixOrNumber, rtol?: number, atol?: number, equal_nan?: boolean): boolean;
