{"version":3,"file":"cltest.spec.js","sourceRoot":"","sources":["cltest.spec.ts"],"names":[],"mappings":";AAAA,IAAO,EAAE,WAAW,cAAc,CAAC,CAAC;AAKpC,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,aAAa,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAC7C,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACzD,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,UAAU,CAAC,CAAC;AACpC,IAAI,QAAQ,GAAG,IAAI,CAAC;AACpB,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACf,EAAE,CAAC,MAAM,EAAE,CAAC;IACZ,QAAQ,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAC5C,CAAC;AAED,QAAQ,CAAC,IAAI,EAAE;IACb,EAAE,CAAC,MAAM,EAAE;QACT,IAAI,KAAK,GAAG,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;QACxB,IAAI,MAAM,GAAG,EAAE,CAAC,EAAE,CAAC,YAAY,CAAC;YAC9B,4DAA4D;YAC5D,6CAA6C;YAC7C,GAAG;SACJ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACd,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;QAClC,CAAC,CAAC,IAAI,EAAE,CAAC;QACT,EAAE,CAAC,EAAE,CAAC,aAAa,CAAC,MAAM,EAC1B,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,cAAc,EAAE,KAAK,EAAE,CAAC,EAAE;YAC3C,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,EAAC,CAAC,CAAC,CAAC;QAClE,CAAC,CAAC,IAAI,EAAE,CAAC;IACX,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import $M = require('../src/sushi');\n\ndeclare var require;\ndeclare var process;\ndeclare var Buffer;\nvar os = require('os');\nvar fs = require('fs');\nvar path = require('path');\nvar child_process = require('child_process');\nvar cl_enabled = Boolean(Number(process.env['TEST_CL']));\nconsole.log('OpenCL ' + cl_enabled);\nvar MatrixCL = null;\nif (cl_enabled) {\n  $M.initcl();\n  MatrixCL = require('../src/cl/matrix_cl');\n}\n\ndescribe('cl', () => {\n  it('vec4', () => {\n    var WebCL = $M.CL.WebCL;\n    var kernel = $M.CL.createKernel([\n      '__kernel void kernel_func(__global float *dst, int4 vec) {',\n      'dst[0] = vec.x + vec.y + vec.z + vec.w + 5;',\n      '}'\n    ].join('\\n'));\n    var m = $M.ones(1, 1, 'gpuArray');\n    m.disp();\n    $M.CL.executeKernel(kernel,\n    [{ access: WebCL.MEM_WRITE_ONLY, datum: m },\n    { type: WebCL.type.VEC4 | WebCL.type.INT, datum: [1,-2,3,4] }],1);\n    m.disp();\n  });\n});\n"]}